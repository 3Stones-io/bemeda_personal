<section class="w-full max-w-full min-h-screen bg-gray-100">
  <div class="relative flex flex-col h-screen">
    <!-- Header -->
    <div class="bg-indigo-600 px-4 py-3 flex justify-between items-center sticky top-0 z-10 shadow-md">
      <div class="flex items-center">
        <h2
          :if={is_admin?(@current_user, @job_application)}
          class="text-lg font-medium text-white"
        >
          {@job_application.user.email}
        </h2>
        <h2
          :if={!is_admin?(@current_user, @job_application)}
          class="text-lg font-medium text-white"
        >
          {@job_posting.company.name}
        </h2>
        <span class="ml-3">
          <span class="px-2 py-1 rounded-full bg-white text-indigo-600 text-xs font-medium">
            {JobsComponents.format_state_name(@job_application.state)}
          </span>
        </span>
      </div>
      <div class="relative">
        <button
          id="action-menu-toggle"
          phx-click={JS.toggle_class("hidden", to: "#action-menu")}
          class="p-2 rounded-full hover:bg-indigo-500 transition-colors"
          aria-label="Application Actions"
        >
          <.icon name="hero-ellipsis-horizontal" class="h-6 w-6 text-white" />
        </button>
        
<!-- Dropdown Menu -->
        <div
          id="action-menu"
          class="hidden absolute right-0 top-12 w-64 md:w-96 z-20 bg-white shadow-lg divide-y divide-gray-100 border border-gray-200 rounded-lg"
          phx-click-away={JS.add_class("hidden", to: "#action-menu")}
        >
          <div class="py-2">
            <.link
              navigate={
                ~p"/jobs/#{@job_posting.id}/job_applications/#{@job_application.id}/history"
              }
              class="flex items-center px-4 py-3 text-sm text-gray-700 hover:bg-gray-100"
              phx-click={JS.add_class("hidden", to: "#action-menu")}
            >
              <.icon name="hero-clock" class="w-5 h-5 mr-3 text-gray-500" />
              <span>View Application History</span>
            </.link>

            <div :if={can_transition?(@current_user, @job_application)}>
              <button
                :for={next_state <- get_next_states(@job_application.state)}
                :if={can_transition_to?(@current_user, @job_application, next_state)}
                phx-click={
                  JS.push("open-state-modal", value: %{state: next_state})
                  |> JS.add_class("hidden", to: "#action-menu")
                }
                class="w-full flex items-center px-4 py-3 text-sm text-gray-700 hover:bg-gray-100 text-left"
              >
                <.icon name="hero-arrow-path" class="w-5 h-5 mr-3 text-gray-500" />
                <span>{JobsComponents.format_state_action(next_state)}</span>
              </button>
            </div>
          </div>

          <div :if={@applicant_resume && @applicant_resume.is_public} class="py-2">
            <.link
              navigate={~p"/resumes/#{@applicant_resume.id}"}
              class="flex items-center px-4 py-3 text-sm text-gray-700 hover:bg-gray-100"
              phx-click={JS.add_class("hidden", to: "#action-menu")}
              target="_blank"
            >
              <.icon name="hero-document-text" class="w-5 h-5 mr-3 text-gray-500" />
              <span>View Resume</span>
            </.link>
          </div>

          <div :if={is_admin?(@current_user, @job_application)} class="py-2">
            <.link
              navigate={
                ~p"/companies/#{@job_posting.company.id}/applicant/#{@job_application.id}"
              }
              class="flex items-center px-4 py-3 text-sm text-gray-700 hover:bg-gray-100"
              phx-click={JS.add_class("hidden", to: "#action-menu")}
            >
              <.icon name="hero-identification" class="w-5 h-5 mr-3 text-gray-500" />
              <span>View in Admin Dashboard</span>
            </.link>
          </div>
        </div>
      </div>
    </div>
    
<!-- Chat Messages -->
    <div id="chat-messages" phx-update="stream" class="flex-1 overflow-y-auto p-4 bg-gray-100">
      <ChatComponents.chat_container
        :for={{dom_id, message} <- @streams.messages}
        id={dom_id}
        current_user={@current_user}
        message={message}
      />
    </div>
    
<!-- Chat Input -->
    <div class="sticky bottom-0 border-t border-gray-200 bg-white">
      <ChatComponents.chat_form chat_form={@chat_form} class="px-4 py-3" />
    </div>
  </div>
  
<!-- State Transition Modal -->
  <.modal :if={@show_state_modal} id="state-modal" show on_cancel={JS.push("close-state-modal")}>
    <.form
      :let={f}
      for={@state_form}
      as={:state_update}
      id="state-update-form"
      phx-submit="update-state-with-notes"
    >
      <div class="space-y-4">
        <div>
          <h2 class="text-lg font-medium text-gray-900 mb-1">
            {JobsComponents.format_state_action(@transition_to_state)}
          </h2>
          <p class="text-sm text-gray-500">
            Change status from
            <span class="font-semibold">{format_state_name(@job_application.state)}</span>
            to <span class="font-semibold">{format_state_name(@transition_to_state)}</span>
          </p>
        </div>

        <div>
          <.input field={f[:notes]} type="textarea" label="Notes (optional)" rows={4} />
        </div>

        <div class="flex justify-end gap-3 mt-6">
          <.button
            type="button"
            class="px-4 py-2 bg-white border border-gray-300 text-gray-700 hover:bg-gray-50"
            phx-click={JS.push("close-state-modal")}
          >
            Cancel
          </.button>
          <.button type="submit" class="px-4 py-2">
            Confirm
          </.button>
        </div>
      </div>
    </.form>
  </.modal>
</section>
